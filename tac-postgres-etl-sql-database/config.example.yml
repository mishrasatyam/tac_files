# Node to get data from. Can be localhost.
nodeAddress: https://nodes.wavesnodes.com

# Determines what to do if blocks on this height already exists in the database. 
# Possible options:
# 'nothing' — never update, skip block
# 'update' — update only if block's signature is different
# 'updateForce' — always update
onConflict: update

# How many blocks to fetch on single download request.
# Consider lowering this setting if fetching takes too long.
# Possible values: 1 to 100.
blocksPerRequest: 100

# How many blocks to fetch on single update request.
# More blocks — deeper rollback safety, but longer updates (less realtime results).
# Possible values: 1 to 100, recommended: 1 to 10.
blocksPerUpdate: 5

# A strategy for `updateComposite` script. This type of update combines updates:
# requests `blocks` amount of blocks every `interval` milliceconds. More steps can
# be added so the strategy.
# Updates with more blocks take priority over updates with less.
# Example below: every second update 2 last blocks, every minute — 10 blocks and every 10 minutes — 100.
updateStrategy:
  - interval: 1000
    blocks: 2
  - interval: 60000
    blocks: 10
  - interval: 600000
    blocks: 100

# Minimal interval between initiating updates, milliseconds ('throttle' value)
# Frequent updates mean data is more up-to-date, but load database more
updateThrottleInterval: 500

# Interval between initiating rollback checks, milliseconds ('throttle' value)
rollbackMonitorThrottleInterval: 300000

# PostgreSQL credentials.
# Tables must be created beforehand according to SQL files.
postgresHost: # IP, hostname or localhost
postgresPort: #5 432 or other
postgresDatabase: # database name
postgresUser: # username
postgresPassword: # password