syntax = "proto3";
package tac.node.grpc;
option java_package = "com.tacplatform.api.grpc";
option csharp_namespace = "Tac.Node.Grpc";
option go_package = "github.com/tacplatform/gotac/pkg/grpc/generated/tac/node/grpc";

import "tac/node/grpc/transactions_api.proto";
import "tac/amount.proto";
import "tac/transaction.proto";
import "google/protobuf/wrappers.proto";

service AccountsApi {
    rpc GetBalances (BalancesRequest) returns (stream BalanceResponse);
    rpc GetScript (AccountRequest) returns (ScriptData);
    rpc GetActiveLeases (AccountRequest) returns (stream TransactionResponse);
    rpc GetDataEntries (DataRequest) returns (stream DataEntryResponse);
    rpc ResolveAlias (google.protobuf.StringValue) returns (google.protobuf.BytesValue);
}

message AccountRequest {
    bytes address = 1;
}

message DataRequest {
    bytes address = 1;
    string key = 2;
}

message BalancesRequest {
    bytes address = 1;
    repeated bytes assets = 4;
}

message BalanceResponse {
    message TacBalances {
        int64 regular = 1;
        int64 generating = 2;
        int64 available = 3;
        int64 effective = 4;
        int64 lease_in = 5;
        int64 lease_out = 6;
    }

    oneof balance {
        TacBalances tac = 1;
        Amount asset = 2;
    }
}

message DataEntryResponse {
    bytes address = 1;
    DataTransactionData.DataEntry entry = 2;
}

message ScriptData {
    bytes script_bytes = 1;
    string script_text = 2;
    int64 complexity = 3;
}
